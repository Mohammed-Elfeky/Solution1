@page "/add"
@inject IService productService
@inject ICategoryService categoryService
@inject NavigationManager UriHelper
@if(categories != null)
{
    <EditForm Model="product" OnValidSubmit="whenSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="mb-2">
            <label>Name</label>
            <InputText @bind-Value="product.Name" class="form-control"></InputText>
            <ValidationMessage For="()=>product.Name" class="text-danger"></ValidationMessage>
        </div>
        <div class="mb-2">
            <label>info</label>
            <InputText @bind-Value="product.info" class="form-control"></InputText>
            <ValidationMessage For="()=>product.info" class="text-danger"></ValidationMessage>
        </div>
        <div class="mb-2">
             <label>price</label>
            <InputNumber @bind-Value="product.price" class="form-control"></InputNumber>
            <ValidationMessage For="()=>product.price" class="text-danger"></ValidationMessage>
        </div>
        <div>
            <label>category</label>
                <InputSelect @bind-Value="product.cat_Id" class="form-control">
                    @foreach (var item in categories)
                       {
                           <option class="py-2" value="@item.Id">@item.Name</option>
                       }
                </InputSelect>
            <ValidationMessage For="()=>product.cat_Id" class="text-danger"></ValidationMessage>

        </div>
        <input type="submit" value="Add" class="btn btn-primary mt-4">
</EditForm>
}

@code {
    public Product product { set; get; } = new Product(){cat_Id=1};
    
    public List<Category> categories { set; get; } 
    protected async override Task OnInitializedAsync()
    {
        categories = await categoryService.GetAll();
    }
    async Task whenSubmit()
    {
        await productService.Insert(product);
        UriHelper.NavigateTo("Products");
    }
}

